@use 'sass:list';

@function serie($intensity-key, $serie-key) {
    @if not list.index($intensity-keys, $intensity-key) {
        @error "No intensity #{$intensity-key}";
    }

    @if not list.index($serie-keys, $serie-key) {
        @error "No serie #{$serie-key}";
    }

    @return var(--#{$prefix}-#{$serie-key}-#{$intensity-key});
}

@mixin bg-color($intensity-key, $serie-key: bg) {
    background-color: rgb(
        serie($intensity-key, $serie-key) / var(--#{$prefix}-opacity-bg)
    );
}

@mixin bg-opacity($opacity-key) {
    --#{$prefix}-opacity-bg: #{opacity($opacity-key)};
}

@mixin font-color($intensity-key, $serie-key: font) {
    color: rgb(
        serie($intensity-key, $serie-key) / var(--#{$prefix}-opacity-font)
    );
}

@mixin font-opacity($opacity-key) {
    --#{$prefix}-opacity-font: #{opacity($opacity-key)};
}

@mixin border-color($positions...) {
    @each $position-key, $intensity-key, $serie-key in $positions {
        @if not map-has-value($position-keys, $position-key) {
            @error "No position #{$position-key}";
        }

        @if $position-key == y or $position-key == top or $position-key == all {
            border-top-color: rgb(
                serie($intensity-key, $serie-key) /
                    var(--#{$prefix}-opacity-border-top)
            );
        }

        @if $position-key ==
            y or
            $position-key ==
            bottom or
            $position-key ==
            all
        {
            border-bottom-color: rgb(
                serie($intensity-key, $serie-key) /
                    var(--#{$prefix}-opacity-border-bottom)
            );
        }

        @if $position-key == x or $position-key == left or $position-key == all
        {
            border-left-color: rgb(
                serie($intensity-key, $serie-key) /
                    var(--#{$prefix}-opacity-border-left)
            );
        }

        @if $position-key == x or $position-key == right or $position-key == all
        {
            border-right-color: rgb(
                serie($intensity-key, $serie-key) /
                    var(--#{$prefix}-opacity-border-right)
            );
        }
    }
}

@mixin border-opacity($positions...) {
    @each $position-key, $opacity-key in $positions {
        @if not map-has-value($position-keys, $position-key) {
            @error "No position #{$position-key}";
        }

        @if $position-key == y or $position-key == top or $position-key == all {
            --#{$prefix}-opacity-border-top: #{opacity($opacity-key)};
        }

        @if $position-key ==
            y or
            $position-key ==
            bottom or
            $position-key ==
            all
        {
            --#{$prefix}-opacity-border-bottom: #{opacity($opacity-key)};
        }

        @if $position-key == x or $position-key == left or $position-key == all
        {
            --#{$prefix}-opacity-border-left: #{opacity($opacity-key)};
        }

        @if $position-key == x or $position-key == right or $position-key == all
        {
            --#{$prefix}-opacity-border-right: #{opacity($opacity-key)};
        }
    }
}
